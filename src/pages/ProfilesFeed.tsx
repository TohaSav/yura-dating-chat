import Layout from "@/components/Layout";
import SwipeStack from "@/components/SwipeStack";
import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import Icon from "@/components/ui/icon";
import { useState, useEffect } from "react";
import { useAuth } from "@/contexts/AuthContext";

const ProfilesFeed = () => {
  const { user } = useAuth();
  const [showFilters, setShowFilters] = useState(false);
  const [genderFilter, setGenderFilter] = useState("both");
  const [showProfiles, setShowProfiles] = useState(true); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ —Å—Ä–∞–∑—É

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const generateRandomProfiles = () => {
    const names = [
      "–ê–Ω–Ω–∞",
      "–ú–∞—Ä–∏—è",
      "–ï–ª–µ–Ω–∞",
      "–î–∞—Ä—å—è",
      "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞",
      "–ò–≤–∞–Ω",
      "–ú–∏—Ö–∞–∏–ª",
      "–î–º–∏—Ç—Ä–∏–π",
      "–ê–ª–µ–∫—Å–µ–π",
      "–ù–∏–∫–æ–ª–∞–π",
    ];
    const interests = [
      "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
      "–°–ø–æ—Ä—Ç",
      "–ú—É–∑–∏–∫–∞",
      "–ö–∏–Ω–æ",
      "–ö–Ω–∏–≥–∏",
      "–ì–æ—Ç–æ–≤–∫–∞",
      "–¢–∞–Ω—Ü—ã",
      "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è",
    ];
    const bios = [
      "–õ—é–±–ª—é –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ –Ω–æ–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è üåü",
      "–í –ø–æ–∏—Å–∫–∞—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è –∏ —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π ‚ú®",
      "–¶–µ–Ω—é –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —á—É–≤—Å—Ç–≤–æ —é–º–æ—Ä–∞ üòä",
      "–û–±–æ–∂–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ üåç",
    ];

    const generatePhotos = (baseIndex: number) => {
      const photoCount = Math.floor(Math.random() * 4) + 2; // 2-5 —Ñ–æ—Ç–æ
      return Array.from(
        { length: photoCount },
        (_, i) =>
          `https://images.unsplash.com/photo-${1500000000000 + baseIndex + i * 1000}?w=400&h=600&fit=crop&crop=faces`,
      );
    };

    return Array.from({ length: 10 }, (_, i) => ({
      id: `demo-${i}`,
      name: names[Math.floor(Math.random() * names.length)],
      age: Math.floor(Math.random() * 15) + 20, // 20-35 –ª–µ—Ç
      bio: bios[Math.floor(Math.random() * bios.length)],
      photos: generatePhotos(i),
      interests: interests.slice(0, Math.floor(Math.random() * 4) + 2),
      verified: true, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö
      online: Math.random() > 0.3,
      location: "–ú–æ—Å–∫–≤–∞",
    })).filter((profile) => profile.verified && profile.photos.length >= 2); // –§–∏–ª—å—Ç—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
  };

  const [profiles, setProfiles] = useState(() => generateRandomProfiles());

  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleSearch = () => {
    setProfiles(generateRandomProfiles());
    setShowProfiles(true);
  };

  const handleSwipe = (direction: "left" | "right", profileId: string) => {
    const action = direction === "right" ? "–ª–∞–π–∫" : "–ø—Ä–æ–ø—É—Å–∫";
    console.log(`${action} –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è ${profileId}`);

    // Show match notification for demo (20% chance)
    if (direction === "right" && Math.random() < 0.2) {
      showMatchNotification();
    }
  };

  const showMatchNotification = () => {
    const notification = document.querySelector(".match-notification");
    if (notification) {
      notification.classList.remove("hidden");
      setTimeout(() => {
        notification.classList.add("hidden");
      }, 3000);
    }
  };

  return (
    <Layout>
      <div className="max-w-4xl mx-auto px-4 py-4 md:py-8 pb-24 md:pb-8">
        {/* Header */}
        <div className="flex justify-between items-center mb-4 md:mb-6">
          <h1 className="text-xl md:text-2xl lg:text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-500 bg-clip-text text-transparent">
            –ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞ üíï
          </h1>
          <Button
            variant="outline"
            size="sm"
            onClick={() => setShowFilters(!showFilters)}
            className="flex items-center space-x-1 md:space-x-2"
          >
            <Icon name="Filter" size={16} className="md:hidden" />
            <Icon name="Filter" size={20} className="hidden md:block" />
            <span className="hidden sm:inline text-sm md:text-base">
              –§–∏–ª—å—Ç—Ä—ã
            </span>
          </Button>
        </div>

        {/* Filters Panel */}
        {showFilters && (
          <div className="bg-white rounded-2xl p-4 md:p-6 mb-6 shadow-lg border border-purple-100">
            <h3 className="text-lg font-semibold mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞</h3>
            <div className="grid md:grid-cols-4 gap-4 md:gap-6">
              <div>
                <label className="block text-sm font-medium mb-2">
                  –ö–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏
                </label>
                <Select value={genderFilter} onValueChange={setGenderFilter}>
                  <SelectTrigger className="text-sm">
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="male">–ú—É–∂—á–∏–Ω–∞</SelectItem>
                    <SelectItem value="female">–ñ–µ–Ω—â–∏–Ω–∞</SelectItem>
                    <SelectItem value="both">–ú—É–∂—á–∏–Ω–∞ –∏ –ñ–µ–Ω—â–∏–Ω–∞</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div>
                <label className="block text-sm font-medium mb-2">
                  –í–æ–∑—Ä–∞—Å—Ç
                </label>
                <div className="flex space-x-2">
                  <input
                    type="number"
                    placeholder="–û—Ç 18"
                    className="flex-1 p-2 border rounded-lg text-sm"
                  />
                  <input
                    type="number"
                    placeholder="–î–æ 35"
                    className="flex-1 p-2 border rounded-lg text-sm"
                  />
                </div>
              </div>
              <div>
                <label className="block text-sm font-medium mb-2">
                  –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ
                </label>
                <select className="w-full p-2 border rounded-lg text-sm">
                  <option>–î–æ 5 –∫–º</option>
                  <option>–î–æ 10 –∫–º</option>
                  <option>–î–æ 25 –∫–º</option>
                  <option>–õ—é–±–æ–µ</option>
                </select>
              </div>
              <div>
                <label className="block text-sm font-medium mb-2">
                  –ò–Ω—Ç–µ—Ä–µ—Å—ã
                </label>
                <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º"
                  className="w-full p-2 border rounded-lg text-sm"
                />
              </div>
            </div>
            <div className="mt-6 flex justify-center">
              <Button
                onClick={handleSearch}
                className="w-full bg-gradient-to-r from-pink-500 to-red-500 hover:from-pink-600 hover:to-red-600 text-white font-semibold py-3 rounded-xl shadow-lg transform transition-all duration-200 hover:scale-105"
              >
                <Icon name="Search" size={20} className="mr-2" />
                –ù–∞–π—Ç–∏
              </Button>
            </div>
          </div>
        )}

        {/* Profiles Grid - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ */}
        {showProfiles && (
          <>
            {/* Swipe Cards Container */}
            <div className="relative w-full max-w-xs sm:max-w-sm md:max-w-md lg:max-w-lg mx-auto mb-4">
              <div
                className="relative w-full"
                style={{
                  height: "calc(100vh - 280px)",
                  minHeight: "400px",
                  maxHeight: "600px",
                }}
              >
                <SwipeStack
                  profiles={profiles}
                  onSwipe={handleSwipe}
                  onEmpty={() => console.log("–í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã")}
                />
              </div>
            </div>

            {/* Instructions */}
            <div className="text-center mt-2 text-gray-500 text-xs md:text-sm px-4">
              <p className="hidden md:block">
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —Å–≤–∞–π–ø—ã –¥–ª—è –≤—ã–±–æ—Ä–∞
              </p>
              <p className="md:hidden">
                –°–≤–∞–π–ø–∞–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏
              </p>
            </div>
          </>
        )}

        {/* Match Notification */}
        <div className="match-notification fixed top-24 left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-purple-600 to-pink-500 text-white px-6 py-3 rounded-full shadow-lg z-50 animate-fade-in hidden">
          <div className="flex items-center space-x-2">
            <span className="text-2xl">üéâ</span>
            <span className="font-semibold">
              –≠—Ç–æ –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å! –í—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –¥—Ä—É–≥ –¥—Ä—É–≥—É
            </span>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default ProfilesFeed;
